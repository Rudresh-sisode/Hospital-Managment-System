/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.*;
//import java.util.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;

public class Staff_hm extends javax.swing.JFrame {

   /* Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;*/
    public Staff_hm() {
        initComponents();
        setIcon();
        //conn=javaconnect.ConnectDB();
        Staff_Update();
    }
    public void setIcon()
    {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo-nonetext.png")));
    }
    public void Staff_Update()
    {
        Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
     conn=javaconnect.ConnectDB();
     try
        {
            String sql="select * from Staff_table";

            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            staff_table.setModel(DbUtils.resultSetToTableModel(rs));
           // rs=pst.executeQuery();

        }
         catch(SQLException e)
         {
             JOptionPane.showMessageDialog(null,e+"\nConnection Error\nplease check..");
         }
     finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        staff_type = new javax.swing.JComboBox<>();
        staff_first = new javax.swing.JTextField();
        staff_last = new javax.swing.JTextField();
        staff_mobile = new javax.swing.JTextField();
        staff_address = new javax.swing.JTextField();
        staff_payment = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        staff_date = new com.toedter.calendar.JDateChooser();
        update_staff = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        add_Staff = new javax.swing.JButton();
        delete_staff = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        staff_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hospital Staff Information");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 190, 170);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("<< Back");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1223, 30, 120, 40);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Staff Details");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(190, 20, 560, 170);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hospital-Top-Slider-Image.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(170, 20, 1200, 170);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Staff Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36), new java.awt.Color(0, 102, 102))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("First Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Mobile");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Address");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Joining Date");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Monthly Payment");

        staff_type.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        staff_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----none----", "Word boy", "Nerse" }));
        staff_type.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        staff_first.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        staff_last.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        staff_mobile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        staff_address.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        staff_payment.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        staff_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staff_paymentActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("Staff Type");

        staff_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        update_staff.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        update_staff.setForeground(new java.awt.Color(0, 102, 102));
        update_staff.setText("UPDATE");
        update_staff.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update_staff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_staffActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 102, 102));
        jButton3.setText("CLEAR");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        add_Staff.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add_Staff.setForeground(new java.awt.Color(0, 102, 102));
        add_Staff.setText("ADD");
        add_Staff.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_Staff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_StaffActionPerformed(evt);
            }
        });

        delete_staff.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        delete_staff.setForeground(new java.awt.Color(0, 102, 102));
        delete_staff.setText("DELETE");
        delete_staff.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_staff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_staffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(staff_last, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(staff_first))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(update_staff, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(staff_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(staff_date, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(add_Staff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delete_staff, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staff_type, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staff_address, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staff_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(update_staff, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staff_first, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(staff_last, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staff_type, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staff_mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staff_address, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(add_Staff, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(staff_date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staff_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_staff, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Staff Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 36), new java.awt.Color(0, 102, 102))); // NOI18N

        staff_table.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        staff_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        staff_table.setRowHeight(30);
        staff_table.setRowMargin(2);
        staff_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staff_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(staff_table);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void staff_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staff_paymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staff_paymentActionPerformed

    private void add_StaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_StaffActionPerformed
        // TODO add your handling code here:
        Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
     conn=javaconnect.ConnectDB();
        try
        {
            String st=staff_first.getText();
            String st2=staff_last.getText();
            if(st.isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Staff Name is Empty");
            }
            else if(st2.isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Last Name is Emtpy");
            }
            else
            {
             String sql="insert into Staff_table (First_Name,Last_Name,Staff_Type,Mobile,Address,Joining_Date,Monthly_Payment)  values(?,?,?,?,?,?,?)";
             pst=conn.prepareStatement(sql);
             pst.setString(1, staff_first.getText());
             pst.setString(2, staff_last.getText());
             String value=staff_type.getSelectedItem().toString();
             pst.setString(3, value);
             pst.setString(4, staff_mobile.getText());
             
             pst.setString(5, staff_address.getText());
            
             pst.setString(6,((JTextField)staff_date.getDateEditor().getUiComponent()).getText());

             pst.setString(7, staff_payment.getText());
             int p=JOptionPane.showConfirmDialog(null,"Do you want to save","Conform Save",JOptionPane.YES_NO_OPTION);
             if(p==0)
             {
              pst.execute();
             JOptionPane.showMessageDialog(null, "Saved");
              staff_first.setText("");
             staff_last.setText("");
             staff_mobile.setText("");
             staff_address.setText("");
             staff_type.setSelectedIndex(0);
             ((JTextField)staff_date.getDateEditor().getUiComponent()).setText("");
             staff_payment.setText("");
             Staff_Update();
             }
            }
            
             
             
             
        }
        catch(HeadlessException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e+"\nConnection Error\nplease check..");
        }
        finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
       /* finally
        {
            try
            {
                if(rs!=null)
                {
                    rs.close();
                    
                }
                if(pst!=null)
                {
                    pst.close();
                }
                if(conn!=null)
                {
                    conn.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"databseException "+ e);
            }
        }*/
    }//GEN-LAST:event_add_StaffActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
        new Appointment_hm().setVisible(true);
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void staff_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staff_tableMouseClicked
        // TODO add your handling code here:
        Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
     conn=javaconnect.ConnectDB();
        try
        {
            int row=staff_table.getSelectedRow();
            String Table=(staff_table.getModel().getValueAt(row, 0).toString());
            String sql="select First_Name,Last_Name,Staff_Type,Mobile,Address,Joining_Date,Monthly_Payment from Staff_table where First_Name='"+Table+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next())
            {
                String a=rs.getString("First_Name");
                staff_first.setText(a);
                String b=rs.getString("Last_Name");
                staff_last.setText(b);
                String c=rs.getString("Staff_Type");
                staff_type.setSelectedItem(c);
                String d=rs.getString("Mobile");
                staff_mobile.setText(d);
                String e=rs.getString("Address");
                staff_address.setText(e);
              Date D=rs.getDate("Joining_Date");
              staff_date.setDate(D);
              
               
                String g=rs.getString("Monthly_Payment");
                staff_payment.setText(g);
                
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,e+"\nConnection Error\nplease check..");
        }
       finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
        
        
    }//GEN-LAST:event_staff_tableMouseClicked

    private void delete_staffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_staffActionPerformed
        // TODO add your handling code here:
        Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
     conn=javaconnect.ConnectDB();
        try
        {
            String st=staff_first.getText();
            if(st.isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Staff Name is Empty");
            }
            else
            {
               
            
            String sql="delete from Staff_table where First_Name=?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, staff_first.getText());
            
            int p=JOptionPane.showConfirmDialog(null,"Do you want to Delete","Conform Delete",JOptionPane.YES_NO_OPTION);
             if(p==0)
             {
              pst.execute();
             JOptionPane.showMessageDialog(null, "Deleted"); 
             staff_first.setText("");
             staff_last.setText("");
             staff_mobile.setText("");
             staff_address.setText("");
             staff_type.setSelectedIndex(0);
             ((JTextField)staff_date.getDateEditor().getUiComponent()).setText("");
             staff_payment.setText("");
             Staff_Update();
             }
            }
            
        }
        catch(HeadlessException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e+"\nConnection Error\nplease check..");
        }
         finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
        
    }//GEN-LAST:event_delete_staffActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        staff_first.setText("");
             staff_last.setText("");
             staff_mobile.setText("");
             staff_address.setText("");
             staff_type.setSelectedIndex(0);
             ((JTextField)staff_date.getDateEditor().getUiComponent()).setText("");
             staff_payment.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void update_staffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_staffActionPerformed
        // TODO add your handling code here:
        Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
     conn=javaconnect.ConnectDB();
        try
        {
             String a=staff_first.getText();
        String b=staff_last.getText();
        String c=staff_mobile.getText();
        String d=staff_type.getSelectedItem().toString();
        String e=staff_address.getText();
        String f=((JTextField)staff_date.getDateEditor().getUiComponent()).getText();
        String g=staff_payment.getText();
        if(a.isEmpty()){
            JOptionPane.showMessageDialog(null, "Staff Name is Empty");
        }
        else if(b.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Last Name is Empty");
        }
        else
        {
        String sql="update Staff_table set First_Name='"+a+"',Last_Name='"+b+"',Staff_Type='"+d+"',Mobile='"+c+"',Address='"+e+"',Joining_Date='"+f+"',Monthly_Payment='"+g+"'where First_Name='"+a+"'";
        pst=conn.prepareStatement(sql);
            pst.execute();
            Staff_Update();
            JOptionPane.showMessageDialog(null,"UPDATED");
        }    
        }
        catch(HeadlessException | SQLException e)
        {
            JOptionPane.showMessageDialog(null, e+"\nConnection Error\nplease check..");
        }
         finally
        {
            try
            {
              if(rs!=null)
              {
                  rs.close();
                  
              }
              if(pst!=null)
              {
                  pst.close();
              }
              if(conn!=null)
              {
                  conn.close();
              }
            }
            catch(SQLException ex)
            {
               JOptionPane.showMessageDialog(null, ex);
            }
        }
       
    }//GEN-LAST:event_update_staffActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Staff_hm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Staff_hm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Staff_hm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Staff_hm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Staff_hm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton add_Staff;
    public javax.swing.JButton delete_staff;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField staff_address;
    private com.toedter.calendar.JDateChooser staff_date;
    private javax.swing.JTextField staff_first;
    private javax.swing.JTextField staff_last;
    private javax.swing.JTextField staff_mobile;
    private javax.swing.JTextField staff_payment;
    private javax.swing.JTable staff_table;
    private javax.swing.JComboBox<String> staff_type;
    public javax.swing.JButton update_staff;
    // End of variables declaration//GEN-END:variables
}
